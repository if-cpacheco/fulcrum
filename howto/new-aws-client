examples for kdl.org

make dns in route53
  * aws master
    * route 53
      ifsight.net

         dev.kdl.ifsight.net.
         A
         ALIAS dev.shared.ifsight.net. (z2c8fa46zd587a)
         No
         -

         test.kdl.ifsight.net.
         A
         ALIAS test.shared.ifsight.net. (z2c8fa46zd587a)
         No
         -

         train.kdl.ifsight.net.
         A
         ALIAS train.shared.ifsight.net. (z2c8fa46zd587a)
         No

      # none needed for www as the wildcard currently catches it



grab existing db/files from dev (sometimes pantheon) and load db



create fulcrum-$USER and $USER and for mysql... in each env, note test/trn don't both need


 DB=kdldev
 ROOTPASS=## from lastpass ##

 PW=## generate random one ##

echo "CREATE DATABASE ${DB}; GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES ON $DB.* TO 'fulcrum_$DB'@'10.100.100.%' IDENTIFIED BY '$PW';FLUSH PRIVILEGES"|mysql -h 127.0.0.1 -u root -p${ROOTPASS}


 PW=## generate random one ##

echo "GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES ON $DB.* TO '$DB'@'172.17.%' IDENTIFIED BY '$PW';FLUSH PRIVILEGES"|mysql -h 127.0.0.1 -u root -p${ROOTPASS}



# wget files from wherever developers say

zcat kentlib_db.sql.gz | mysql -h 127.0.0.1 -u root -p${ROOTPASS} ${DB}


prod
--
mysql user in prod is admin (not root)
the host is different depending on aws, for this go it was 10.1.21.65
be sure to esacpe dollar sign in password
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES, LOCK TABLES ON jpl.*  TO 'fulcrum_jpl'@'10.100.100.%'  IDENTIFIED BY 'TODO';
GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER, CREATE TEMPORARY TABLES ON jpl.*  TO 'jpl'@'10.1.%'  IDENTIFIED BY 'TODO';





upload files (dev)
  wget from wherever
  tar xf kentlib_files.tar.gz
  sudo chown -R fulcrum.fulcrum files_train/
  sudo mv files_train/ /usr/local/fulcrum/files/dev.kdl.org
  sudo setenforce 0 && sudo chcon -Rt svirt_sandbox_file_t /usr/local/fulcrum/files && sudo setenforce 1

for tst/trn we want to test the deploy push/pull, so just make the empty folder
  sudo mkdir -p /usr/local/fulcrum/files/test.kdl.org
  sudo chown fulcrum.fulcrum /usr/local/fulcrum/files/test.kdl.org
  sudo setenforce 0 && sudo chcon -Rt svirt_sandbox_file_t /usr/local/fulcrum/files/test.kdl.org && sudo setenforce 1

for prod, you are doing above but their are symlinks in usr local fulcrum files to sfs

checkout the code on cli from github (not deploy for this go)
    sudo mkdir /usr/local/repos/dev.kdl.org
    sudo chown -R fulcrum.fulcrum /usr/local/repos/dev.kdl.org/
  ensure the fulcrum team is set to read only and part of the repo on github
  AS FULCRUM
    cd /usr/local/repos/dev.kdl.org && git clone git@github.com:IFSight/kentlib.git /usr/local/repos/dev.kdl.org
    cd sites/default/
    ln -s /drupal_files/dev.kdl.org files   # this one won't tab complete, boo
    exit
  sudo setenforce 0 && sudo chcon -Rt svirt_sandbox_file_t /usr/local/repos/dev.kdl.org && sudo setenforce 1



create nginx conf

cd /usr/local/fulcrum/conf
 export FULCRUM_ENVIRONMENT=dev
 export FULCRUM_DBNAME=kdldev
 export FULCRUM_DBUSER=kdldev
 export FULCRUM_DBPASS=${PW}
 export FULCRUM_WEBROOT=dev.kdl.org
 export FULCRUM_COOKIE=.${FULCRUM_WEBROOT}
 export FULCRUM_SALT=$(openssl rand -base65 16 | sha256sum | awk '{ print $1 }' )
envsubst<json-redis-varnish.tpl>$FULCRUM_WEBROOT.json


cp the config, rename it for ifsight, change the cookie domain
sudo chown fulcrum.fulcrum dev.kdl*

cd /usr/local/fulcrum/webroots
ln -s ../../repos/dev.kdl.org
ln -s ../../repos/dev.kdl.ifsight.net

# TODO figure out if symlink should go in repo or webroots (dev/trn diff from prod currently)
cd /usr/local/repos
sudo ln -s dev.kdl.org dev.kdl.ifsight.net

node ~/fulcrum/bin/fulcrumConfs.js ~/fulcrum/conf > ~/fulcrum/etc/nginx/fulcrum_config.conf
node ~/fulcrum/bin/fulcrumEnvs.js ~/fulcrum/conf > ~/fulcrum/etc/nginx/fulcrum_env.conf
node ~/fulcrum/bin/fulcrumWebroots.js ~/fulcrum/conf > ~/fulcrum/etc/nginx/fulcrum_webroot.conf
~/fulcrum/bin/nginx-restart




setup deploy.ifdemo.net

  content > add content > client -- good engerish (caps and what not)
  content > add content > server -- fill out info from another existing one


add webhook in github (get the node id from deploy gui)




for prod, go to drpal > config > devlopment
  Cache pages for anonymous users
  Cache BLocks
  min cache life 15 min
  expire of cache 15 min
  all the check boxes at the bottom



panehton rsync -- login and find the connection info and get the sftp


export ENV=train
#sftp -o Port=2222 train.22f28107-b767-487b-a9f6-58a6659970e9@appserver.train.22f28107-b767-487b-a9f6-58a6659970e9.drush.in
# Usually dev, test, or live
export SITE=22f28107-b767-487b-a9f6-58a6659970e9
# Site UUID from dashboard URL: https://dashboard.pantheon.io/sites/<UUID>

# To Upload/Import
#rsync -rlvz --size-only --ipv4 --progress -e 'ssh -p 2222' ./files/* --temp-dir=../tmp/ $ENV.$SITE@appserver.$ENV.$SITE.drush.in:files/

# To Download
rsync --dry-run -rlvz --size-only --ipv4 --progress -e 'ssh -p 2222' $ENV.$SITE@appserver.$ENV.$SITE.drush.in:files/ /usr/local/fulcrum/files/dev.kdl.org/
# for real
rsync -rlvz --size-only --ipv4 --progress -e 'ssh -p 2222' $ENV.$SITE@appserver.$ENV.$SITE.drush.in:files/ /usr/local/fulcrum/files/dev.kdl.org/
# make sure nothing is left behind
rsync --dry-run -rlvz --size-only --ipv4 --progress -e 'ssh -p 2222' $ENV.$SITE@appserver.$ENV.$SITE.drush.in:files/ /usr/local/fulcrum/files/dev.kdl.org/
