#!/bin/bash

FULCRUM_BINDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"&&pwd)"
source ${FULCRUM_BINDIR}/lib/general

vout "Running doctor"

etcHosts 127.0.0.1 mariadb
etcHosts 127.0.0.1 redis
etcHosts 127.0.0.1 varnish

echo 'acl internal  { "0.0.0.0"/0;  }' > $FULCRUM_DIRNAME/etc/varnish/internal.vcl
echo 'acl whitelist { "0.0.0.0"/0;  }' > $FULCRUM_DIRNAME/etc/varnish/whitelist.vcl
echo 'acl blacklist { "0.0.0.0"/32; }' > $FULCRUM_DIRNAME/etc/varnish/blacklist.vcl

# make a minimal fulcrum_config.conf
if [ ! -e $FULCRUM_DIRNAME/etc/nginx/fulcrum/fulcrum_config.conf ]; then
  echo -e 'map $host $fulcrum_env {default "unk";}\nmap $host $fulcrum_webroot {default "unk";}\nmap $host $fulcrum_conf {default "unk";}' > $FULCRUM_DIRNAME/etc/nginx/fulcrum/fulcrum_config.conf
fi

# wait until docker is running
echo -n "Wait until Docker is running."
while ! $(docker run --rm hello-world > /dev/null 2>&1); do
  echo -n "."
  sleep 0.25
done

# make a new varnish/secret
if [ ! -e $FULCRUM_DIRNAME/etc/varnish/secret ]; then
  FULCRUM_VARN_SECRET=$(rndStr 32)
  echo -n "$FULCRUM_VARN_SECRET" > $FULCRUM_DIRNAME/etc/varnish/secret
  vout "$FULCRUM_DIRNAME/etc/varnish/secret doesn't exist, creating with $FULCRUM_VARN_SECRET"
else
  FULCRUM_VARN_SECRET=$(cat $FULCRUM_DIRNAME/etc/varnish/secret)
fi

source ${FULCRUM_BINDIR}/lib/doctor-$FULCRUM_OS_LC