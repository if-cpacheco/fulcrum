#!/bin/bash

# functions to make sure that fulcrum hinge is healthy on the Mac

# set an alias for localhost so xdebug can transmit back the IDE
# https://forums.docker.com/t/accessing-host-machine-from-within-docker-container/14248/14
# sudo ifconfig lo0 remove 172.16.222.111  - to remove
if [ -z "$(ifconfig lo0 | grep 172.16.222.111)" ]; then
  sudo ifconfig lo0 alias 172.16.222.111
fi

# move old location or get d4m-nfs if it doesn't already exist
if [[ -e ~/repos/d4m-nfs  &&  ! -e ~/fulcrum/var/fulcrum/d4m-nfs ]]; then
  mv ~/repos/d4m-nfs ~/fulcrum/var/fulcrum/d4m-nfs
elif [ ! -e ~/fulcrum/var/fulcrum/d4m-nfs ]; then
  vout "Cannot find Docker for Mac NFS (d4m-nfs) repo, cloning from github"
  mkdir -p ~/fulcrum/var/fulcrum
  cd ~/fulcrum/var/fulcrum
  git clone https://github.com/IFSight/d4m-nfs.git
  cp d4m-nfs/examples/d4m-nfs-mounts.txt d4m-nfs/etc/
  echo -e "/Users/$USER:/mnt:0:0" >> d4m-nfs/etc/d4m-nfs-mounts.txt
  cd -
fi

TAPDIR=$(brew --prefix)/Library/Taps/homebrew
if [ ! -e $TAPDIR ]; then
  TAPDIR=$(brew --prefix)/Homebrew/Library/Taps/homebrew

  if [ ! -e $TAPDIR ]; then
    vout "ERROR: Cannot find Homebrew tap director, make sure Homebrew is installed correctly!"
    exit 1
  fi
fi

if ! $(ls -d $TAPDIR/homebrew-dupes > /dev/null 2>&1); then
  vout "Tapping: homebrew dupes"
  brew tap homebrew/dupes
else
  vout "Check: homebrew dupes"
fi

if ! $(ls -d $TAPDIR/homebrew-versions > /dev/null 2>&1); then
  vout "Tapping: homebrew versions"
  brew tap homebrew/versions
else
  vout "Check: homebrew versions"
fi

# kludge for Homebrew 0.9
if [[ ! "$TAPDIR" == *"Homebrew"* ]]; then
  SEDDIR=/usr/local/Library/ENV/4.3
  if [ ! -e $SEDDIR ]; then
    vout "Creating: $SEDDIR for homebrew sed workaround."
    sudo mkdir -p $SEDDIR
  else
    vout "Check: $SEDDIR homebrew workaround exists."
  fi

  SEDLINK=$SEDDIR/sed
  if [ ! -e $SEDLINK ]; then
    vout "Creating: $SEDLINK for homebrew sed workaround."
    sudo ln -s /usr/local/Library/Homebrew/shims/super/sed $SEDDIR/sed
  else
    vout "Check: $SEDLINK homebrew workaround exists."
  fi
fi

BREWLIST=$(brew list)

if [[ ! "$BREWLIST" == *"php"* ]]; then
  vout "Installing: homebrew 'php' package."
  brew install php
else
  vout "Check: homebrew 'php' package is installed."
fi

if [[ ! "$BREWLIST" == *"php@5.6"* ]]; then
  vout "Installing: homebrew 'php@5.6' package."
  brew install php@5.6
else
  vout "Check: homebrew 'php@5.6' package is installed."
fi

if [[ ! "$BREWLIST" == *"brew-php-switcher"* ]]; then
  vout "Installing: homebrew 'brew-php-switcher' package."
  brew install brew-php-switcher
else
  vout "Check: homebrew 'brew-php-switcher' package is installed."
fi

if [[ ! "$BREWLIST" == *"drush"* ]]; then
  vout "Installing: homebrew 'drush' package."
  brew install drush
else
  vout "Check: homebrew 'drush' package is installed."
fi

INITPHPVER=$(php -v|head -n 1|cut -d\  -f2|cut -d. -f1,2)

if [[ ! "$INITPHPVER" == "5.6" ]]; then
  brew-php-switcher 5.6
fi

PECLLIST=$(pecl list)

if [[ ! "$PECLLIST" == *"redis"* ]]; then
  vout "Installing: pecl 'php 56 redis' package."
  printf "\n" | pecl install redis
else
  vout "Check: pecl php 5.6 'redis' package is installed."
fi

# switch back to initial php version
if [[ ! "$INITPHPVER" == "5.6" ]]; then
  brew-php-switcher $INITPHPVER
fi

# stop apache in case previous installs had started it
if (ps auxwww|grep /usr/sbin/httpd|grep -v grep); then
  echo "Check: Stopping apache since it was started from some doctor action"
  sudo apachectl stop

  # stop auto start
  if [ -e /System/Library/LaunchDaemons/org.apache.httpd.plist ]; then
    echo "Check: Removing apache autostart since it was started from some doctor action"
    sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist 2>/dev/null
  fi
fi

if [ ! -d $FULCRUM_DIRNAME/var/lib/mysql ]; then
  mkdir $FULCRUM_DIRNAME/var/lib/mysql
fi

sudo chown -R 999:999 $FULCRUM_DIRNAME/var/lib/mysql
sudo chmod -R u+w,u+r $FULCRUM_DIRNAME/var/lib/mysql

if [ ! -d $FULCRUM_DIRNAME/var/lib/elasticsearch ]; then
  sudo mkdir $FULCRUM_DIRNAME/var/lib/elasticsearch
fi
sudo chown -R 1000:0 $FULCRUM_DIRNAME/var/lib/elasticsearch
sudo chmod -R 770 $FULCRUM_DIRNAME/var/lib/elasticsearch

# cli autocomplete
source $FULCRUM_DIRNAME/bin/lib/cli-autocomplete
