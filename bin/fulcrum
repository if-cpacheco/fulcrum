#!/bin/bash

# http://www.davidpashley.com/articles/writing-robust-shell-scripts/
set -eu

FULCRUM_BINDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"&&pwd)"
source ${FULCRUM_BINDIR}/lib/fulcrum

${FULCRUM_BINDIR}/doctor

# defaults
DOPULL=0
VERBOSE=0
QUIET=0
MYCOMMAND=""

# read in command line args
while getopts ":hnpqv" opt; do
  case ${opt} in
    h)
      usage
      ;;
    n)
      DOPULL=0
      ;;
    p)
      DOPULL=1
      ;;
    q)
      QUIET=1
      ;;
    v)
      VERBOSE=1
      ;;
    \?)
      echo "Invalid Option: -$OPTARG" >&2
      echo "Try -h for Help."
      exit 1
      ;;
    :)
      echo "Option -$OPTARG Requires an Argument." >&2
      echo "Try -h for Help."
      exit 1
      ;;
  esac
done

# so docker for mac needs to be running
# docker ps 1> /dev/null 2>/dev/null || eout "docker for mac does not appear to be running, you should launch it from your applications folder. If it is running, you may need to wait a few more seconds for it to finish booting up.  If you do not have docker for mac, please download the stable version from https://docs.docker.com/docker-for-mac/"

# set vars for use in docker compose
export FULCRUM_HOST_USER=$(whoami)

# it does not appear docker-for-mac needs the fulcrum ID work around
export FULCRUM_HOST_UID=$(id -u $FULCRUM_HOST_USER)
export FULCRUM_HOST_GID=$(id -g $FULCRUM_HOST_USER)
export FULCRUM_HOST_IP=$(ipconfig getifaddr en0 || ipconfig getifaddr en1 || ipconfig getifaddr en2)

# must come after FULCRUM_HOST_USER
DCFILE="$FULCRUM_DIRNAME/etc/fulcrum/stack/hinge-${FULCRUM_OS_LC}.yml"

# debug
vout "FULCRUM_HOST_USER = $FULCRUM_HOST_USER"
vout "FULCRUM_HOST_UID = $FULCRUM_HOST_UID"
vout "FULCRUM_HOST_GID = $FULCRUM_HOST_GID"
vout "FULCRUM_HOST_IP = $FULCRUM_HOST_IP"
vout "DCFILE = ${DCFILE}"

MYCOMMAND=${!#}
vout "MYCOMMAND = ${MYCOMMAND}"

case ${MYCOMMAND} in
  "up"|"start"|"restart"|"reload")
    vout "running restart command"
    drestart
    ;;

  "stop"|"halt"|"down"|"shutdown")
    vout "running stop command"
    dStop
    ;;

  "sh"|"bash"|"shell"|"enter"|"dsh"|"dbash")
    vout "running dbash command"
    dbash
    ;;

  "ps"|"dps")
    vout "running dps command"
    dps
    ;;

  "log"|"logs"|"dlog"|"dlogs")
    vout "running dlogs command"
    dlogs
    ;;

  "haproxy"|"haproxyrestart"|"haproxy-restart")
    vout "running haproxyrestart command"
    haproxyrestart
    ;;

  "conf")
    vout "regenerate nginx .conf file from json"
    nginxConfAll
    ;;

  *)
    vout "command not found..."
    sendalert ""
    sendalert "command not found"
    sendalert ""
    sendalert ""
    usage
esac
